
spring.datasource.url=jdbc:postgresql://localhost:5432/employeeManagementSystem?useSSL=false
spring.datasource.username=postgres
spring.datasource.password=root


#Hibernate Properties
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.PostgreSQLDialect
#alloing hibernate to create the tables on the database
spring.jpa.hibernate.ddl-auto=update



#server
server.port=8081

spring.application.name=MY_WIERD NAME

logging.pattern.console=%date{\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", UTC} %msg%n


# server.servlet.contextPath=/api/v1

#cinfig values to use across app
env_name=${env_name}


# spring.datasource.url=jdbc:postgresql://${DB_URL}:${DB_PORT}/${DB_NAME}?useSSL=false
# spring.datasource.username=${DB_USERNAME}
# spring.datasource.password=${DB_PASSWORD}
# spring.jpa.properties.hibernate.dialect =${DB_HIBERNATE_DIALECT}
# #alloing hibernate to create the tables on the database
# spring.jpa.hibernate.ddl-auto=update



#actuator for health and others 
# management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.include=health


#kafka configs
# spring.config.activate.on-profile = local
spring.kafka.template.default-topic=library-events
spring.kafka.consumer.bootstrap-servers= localhost:9092,localhost:9093,localhost:9094
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
spring.kafka.consumer.value-deserializer =org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=library-events-listener-group
spring.kafka.consumer.auto-offset-reset=latest
